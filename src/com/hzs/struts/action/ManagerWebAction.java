/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.hzs.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.hzs.hibernate.db.HibernateSessionFactory;
import com.hzs.struts.form.ManagerWebForm;
import com.myeclipse.hibernate.Timetable;

/** 
 * MyEclipse Struts
 * Creation date: 01-07-2014
 * 
 * XDoclet definition:
 * @struts.action path="/managerWeb" name="managerWebForm" input="/form/managerWeb.jsp" scope="request"
 */
public class ManagerWebAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		ManagerWebForm managerWebForm = (ManagerWebForm) form;// TODO Auto-generated method stub
		
		int queryitem = managerWebForm.getQueryitem();
		String queryinstance = managerWebForm.getQueryinstance();
		
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = session.beginTransaction();
		
		Query query = null;
		List<Timetable> list;
		HttpSession httpSession = request.getSession();
		
		session.clear();
		
		switch (queryitem) {
		case 1:
			query = session.createQuery("from Timetable timtable where termNum = ?");
			query.setInteger(0, Integer.parseInt(queryinstance));
			break;
			
		case 2:
			query = session.createQuery("from Timetable timtable where teacher.workNum = ?");
			query.setInteger(0, Integer.parseInt(queryinstance));
			break;
			
		case 3:
			query = session.createQuery("from Timetable timtable where classId = ?");
			query.setInteger(0, Integer.parseInt(queryinstance));
			break;
			
		case 4:
			query = session.createQuery("from Timetable timtable where room = ?");
			query.setString(0, queryinstance);
			break;
			
		case 5:
			query = session.createQuery("from Timetable timtable where course.name = ?");
			query.setString(0, queryinstance);
			break;
		}
		
		list = query.list();
		tx.commit();
			
		httpSession.setAttribute("QueTimetable", list);
		
		return mapping.findForward("manTimetable");
	}
}