/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.hzs.struts.action;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.hzs.hibernate.db.HibernateSessionFactory;
import com.hzs.struts.form.UserLoginForm;
import com.myeclipse.hibernate.User;


/** 
 * MyEclipse Struts
 * Creation date: 01-05-2014
 * 
 * XDoclet definition:
 * @struts.action path="/userLogin" name="userLoginForm" input="/form/userLogin.jsp" scope="request"
 * @struts.action-forward name="success" path="/success.jsp"
 */
public class UserLoginAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		UserLoginForm userLoginForm = (UserLoginForm) form;// TODO Auto-generated method stub
		
		//get user input name and pws
		String name = userLoginForm.getUsername();
		String pwd = userLoginForm.getUserpwd();
		
		//query db session
		Session session = HibernateSessionFactory.getSession();
		
		Transaction tx = session.beginTransaction();
		Query query = session.createQuery("from User u where u.name = ? and u.password = ?");
		query.setString(0, name);
		query.setString(1, pwd);
		
		List list = query.list();
		
		tx.commit();
		
		if (!list.isEmpty()) { //confirm
			
			//judge user type
			User user=(User)list.get(0);
			
			//if the user is student or teacher
			//match the UserID to RealID
			//as UserID to StuNum
			//as UserID to WorkNum
			if (user.getType() < 2) {
				
				//jdbc query
				
				try {
					String url = "jdbc:mysql://localhost/test?user=root&password=";
					Class.forName("com.mysql.jdbc.Driver").newInstance();
					Connection connection = DriverManager.getConnection(url);
					Statement statement = connection.createStatement();
					
					ResultSet rs = statement.executeQuery("select RealID from UserIDToRealID where UserID = " + String.valueOf(user.getId()));
					
					rs.next();
					
					// save RealID to session
					HttpSession httpSession = request.getSession();
					httpSession.setAttribute("RealID", rs.getString("RealID"));
				}
				catch (Exception e) {
					// TODO: handle exception
					e.printStackTrace();
				}
			}
			
			switch (user.getType()) {
			case 0:
				return mapping.findForward("studentWeb");
				
			case 1:
				return mapping.findForward("teacherWeb");
				
			case 2:
				return mapping.findForward("managerWeb");

			default:
				return mapping.findForward("failure");
			}
		}
		else {
			return mapping.findForward("failure");
		}
	}
}